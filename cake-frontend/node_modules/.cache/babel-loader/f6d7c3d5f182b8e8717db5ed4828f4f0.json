{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/snehalghule/Desktop/Final Project/cake-frontend/src/components/ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Fromcontainer from '../components/Fromcontainer';\nimport { saveShippingAddress } from '../actions/cartAction';\nimport CheckoutSteps from '../components/checkoutSteps';\n\nconst ShippingScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      address,\n      city,\n      postalCode,\n      country\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/Cake/para.jpg\",\n      alt: \"not found\",\n      width: \"1200px\",\n      height: \"200px\",\n      className: \"my-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fromcontainer, {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n        step1: true,\n        step2: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: 'cursive',\n          color: '#78c2ad'\n        },\n        children: \"Shipping Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            className: \"my-3\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Address\",\n            value: address,\n            required: true,\n            onChange: e => setAddress(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"city\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter City\",\n            value: city,\n            required: true,\n            onChange: e => setCity(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"postalCode\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            children: \"Postal Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter PostalCode\",\n            value: postalCode,\n            required: true,\n            onChange: e => setPostalCode(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"country\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter Country\",\n            value: country,\n            required: true,\n            onChange: e => setCountry(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShippingScreen, \"KT4bLSLmYyT6syAtNpfI2FVSRoE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["/Users/snehalghule/Desktop/Final Project/cake-frontend/src/components/ShippingScreen.js"],"names":["React","useState","Form","Button","useDispatch","useSelector","Fromcontainer","saveShippingAddress","CheckoutSteps","ShippingScreen","history","cart","state","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","fontFamily","color","fontSize","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACtC,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;AAEA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACY,eAAe,CAACC,OAAjB,CAAtC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAACY,eAAe,CAACG,IAAjB,CAAhC;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAACY,eAAe,CAACK,UAAjB,CAA5C;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAACY,eAAe,CAACO,OAAjB,CAAtC;AAEA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;;AAEA,QAAMmB,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACf,mBAAmB,CAAC;AAAEO,MAAAA,OAAF;AAAWE,MAAAA,IAAX;AAAiBE,MAAAA,UAAjB;AAA6BE,MAAAA;AAA7B,KAAD,CAApB,CAAR;AACAV,IAAAA,OAAO,CAACgB,IAAR,CAAa,UAAb;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AACE,MAAA,GAAG,EAAC,gBADN;AAEE,MAAA,GAAG,EAAC,WAFN;AAGE,MAAA,KAAK,EAAC,QAHR;AAIE,MAAA,MAAM,EAAC,OAJT;AAKE,MAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,aAAD;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,KAAK,MAApB;AAAqB,QAAA,KAAK;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,SAAd;AAAyBC,UAAAA,KAAK,EAAE;AAAhC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEL,aAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,SAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,KAAK,EAAE;AAAEI,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC,aADT;AAEE,YAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,eAFd;AAGE,YAAA,KAAK,EAAEf,OAHT;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAGU,CAAD,IAAOT,UAAU,CAACS,CAAC,CAACM,MAAF,CAASC,KAAV,CAL7B;AAME,YAAA,KAAK,EAAE;AAAEJ,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAE;AAAEF,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,YAFd;AAGE,YAAA,KAAK,EAAEb,IAHT;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAGQ,CAAD,IAAOP,OAAO,CAACO,CAAC,CAACM,MAAF,CAASC,KAAV,CAL1B;AAME,YAAA,KAAK,EAAE;AAAEJ,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAgCE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAE;AAAEF,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,kBAFd;AAGE,YAAA,KAAK,EAAEX,UAHT;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAGM,CAAD,IAAOL,aAAa,CAACK,CAAC,CAACM,MAAF,CAASC,KAAV,CALhC;AAME,YAAA,KAAK,EAAE;AAAEJ,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhCF,eA8CE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,SAAtB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,KAAK,EAAE;AAAEF,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,eAFd;AAGE,YAAA,KAAK,EAAET,OAHT;AAIE,YAAA,QAAQ,MAJV;AAKE,YAAA,QAAQ,EAAGI,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACM,MAAF,CAASC,KAAV,CAL7B;AAME,YAAA,KAAK,EAAE;AAAEJ,cAAAA,UAAU,EAAE,SAAd;AAAyBE,cAAAA,QAAQ,EAAE;AAAnC;AANT;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9CF,eA4DE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5DF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAiFD,CAlGD;;GAAMpB,c;UACSJ,W,EAQID,W;;;KATbK,c;AAoGN,eAAeA,cAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Fromcontainer from '../components/Fromcontainer'\nimport { saveShippingAddress } from '../actions/cartAction'\nimport CheckoutSteps from '../components/checkoutSteps'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <>\n      <img\n        src='/Cake/para.jpg'\n        alt='not found'\n        width='1200px'\n        height='200px'\n        className='my-3'\n      />\n      <Fromcontainer>\n        <CheckoutSteps step1 step2 />\n        <h1 style={{ fontFamily: 'cursive', color: '#78c2ad' }}>\n          Shipping Details\n        </h1>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='address'>\n            <Form.Label\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n              className='my-3'\n            >\n              Address\n            </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Address'\n              value={address}\n              required\n              onChange={(e) => setAddress(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='city'>\n            <Form.Label style={{ fontFamily: 'cursive', fontSize: '20px' }}>\n              City\n            </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter City'\n              value={city}\n              required\n              onChange={(e) => setCity(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='postalCode'>\n            <Form.Label style={{ fontFamily: 'cursive', fontSize: '20px' }}>\n              Postal Code\n            </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter PostalCode'\n              value={postalCode}\n              required\n              onChange={(e) => setPostalCode(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='country'>\n            <Form.Label style={{ fontFamily: 'cursive', fontSize: '20px' }}>\n              Country\n            </Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Enter Country'\n              value={country}\n              required\n              onChange={(e) => setCountry(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type='submit' variant='primary'>\n            Continue\n          </Button>\n        </Form>\n      </Fromcontainer>\n    </>\n  )\n}\n\nexport default ShippingScreen\n"]},"metadata":{},"sourceType":"module"}