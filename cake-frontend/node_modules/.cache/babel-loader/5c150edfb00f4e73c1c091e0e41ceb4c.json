{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/snehalghule/Desktop/Final Project/cake-frontend/src/components/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails } from '../actions/userActions';\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setconfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not Macth!');\n    } else {//dispatch(register(name, email, password))\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"my-5\",\n        style: {\n          fontFamily: 'cursive',\n          color: '#78c2ad'\n        },\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            },\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Repeat Password\",\n            value: confirmPassword,\n            onChange: e => setconfirmPassword(e.target.value),\n            style: {\n              fontFamily: 'cursive',\n              fontSize: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          style: {\n            fontFamily: 'cursive',\n            fontSize: '20px'\n          },\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileScreen, \"MECNjl/Lb/UHyUtfDnmU9EII28Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/Users/snehalghule/Desktop/Final Project/cake-frontend/src/components/ProfileScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","ProfileScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setconfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","push","submitHandler","e","preventDefault","fontFamily","color","fontSize","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails } from '../actions/userActions'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setconfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not Macth!')\n    } else {\n      //dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2\n          className='my-5'\n          style={{ fontFamily: 'cursive', color: '#78c2ad' }}\n        >\n          User Profile\n        </h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label style={{ fontFamily: 'cursive', fontSize: '20px' }}>\n              Name\n            </Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='email'>\n            <Form.Label style={{ fontFamily: 'cursive', fontSize: '20px' }}>\n              Email Address\n            </Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter Email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='password'>\n            <Form.Label style={{ fontFamily: 'cursive', fontSize: '20px' }}>\n              Password\n            </Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Enter Password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword'>\n            <Form.Label style={{ fontFamily: 'cursive', fontSize: '20px' }}>\n              Confirm Password\n            </Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Repeat Password'\n              value={confirmPassword}\n              onChange={(e) => setconfirmPassword(e.target.value)}\n              style={{ fontFamily: 'cursive', fontSize: '20px' }}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button\n            type='submit'\n            variant='primary'\n            style={{ fontFamily: 'cursive', fontSize: '20px' }}\n          >\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h3>My Orders</h3>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}